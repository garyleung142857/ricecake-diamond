---
import { h } from 'hastscript'
import { visit, CONTINUE } from 'unist-util-visit'
import { rehype } from 'rehype'

const bodyHtml = await Astro.slots.render('default')
const breakCalls = () => (tree: any) => {
    visit(tree, 'element', (node: any) => {
        if(node.tagName === 'p') {
            node.tagName = 'h5'
            if (node.properties.class == undefined) {
                node.properties.class = ['tree-stem']
            } else {
                node.properties.class.push('tree-stem')
            }
            let nodeId = ''
            visit(node, 'text', (textNode: any) => {
                nodeId = nodeId + textNode.value
            })
            node.properties.id = encodeURIComponent(nodeId)
            return CONTINUE
        }
        node.children = node.children.filter(
            (child: any) => !/^\n+$/.test(child.value)
        )
        if (node.tagName !== 'li') return CONTINUE
        
        const colonIndex = node.children.findIndex(c => c.value?.indexOf(':') > -1)
        if (colonIndex === -1) return CONTINUE
        let texts = node.children[colonIndex].value.split(':', 2)
        let newChildren = [
            h('span.tree-call', node.children.slice(0, colonIndex).concat(h('text', texts[0]))),
            h('text', texts[1].trimStart()),
            ...node.children.slice(colonIndex + 1)
        ]
        
        node.children = newChildren
    })
}

const processedHtml = await rehype()
    .use(breakCalls)
    .process(bodyHtml)

---
<div class="bidding-tree">
    <Fragment set:html={processedHtml} />
</div>

<style>
.bidding-tree {
    padding: 10px;
    ul {
        list-style-type: none;
        padding-left: 4em;
    }
    > ul {
        padding-left: 0;
    }
    
    ul, li {
        margin-top: 0 !important;
    }

    .tree-stem {
        font-weight: bold;
        border-bottom: solid 2px var(--sl-color-gray-3);
        margin-bottom: 5px;
    }
    .tree-call {
        display: inline-block;
        min-width: 4em;
        padding-right: 1em;
        font-weight: bold;
    }
}
</style>